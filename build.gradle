buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.security:spring-security-crypto'
	// DB
//	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'com.mysql', name: 'mysql-connector-j'

	// jakarta
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	implementation "com.querydsl:querydsl-codegen:5.0.0" // QueryDSL 코드 생성

	//querydsl 추가
//	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
//	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	//Jakarta 설정 어노테이션에 사용된다.
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//스프링 시큐리티 관련 (로그인 구현 시 필요)

	testCompileOnly 'org.projectlombok:lombok:1.18.22' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22' // 테스트 의존성 추가
//	testImplementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝